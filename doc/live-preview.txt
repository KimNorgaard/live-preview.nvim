*live-preview.txt*	For Neovim		

==============================================================================
CONTENTS						*live-preview-contents*

    1. Introduction				|live-preview-intro|
    2. Requirements				|live-preview-requirements|
    3. Installation				|live-preview-installation|
    4. Setup					|live-preview-setup|
    5. Usage					|live-preview-usage|
    6. License					|live-preview-license|

==============================================================================
1. Introduction					*live-preview-intro*

live-preview.nvim is a Live Preview Plugin for Neovim that allows you to view
Markdown or HTML (along with CSS, JavaScript) files in a web browser with live
updates.

==============================================================================
2. Requirements					*live-preview-requirements*

- Node.js and npm or yarn must be installed.

==============================================================================
3. Installation					*live-preview-installation*

You can install the `live-preview.nvim` using your favorite plugin manager.

Using lazy.nvim:
>lua
	require("lazy").setup({
	    {
	        'brianhuster/live-preview.nvim',
	        build = 'npm init && npm install && npm install -g nodemon', --- if you use npm
	        -- build = 'yarn init && yarn install && yarn global add nodemon', --- if you use yarn
	    }
	})
<

Using packer.nvim:
>lua
	require('packer').startup(function()
	    use {
	        'brianhuster/live-preview.nvim',
	        build = 'npm install && npm install -g nodemon', --- if you use npm
	        -- build = 'yarn install && yarn global add nodemon', --- if you use yarn
	    }
	end)
<

Using vim-plug:
>vim
	call plug#begin('~/.config/nvim/plugged')

	Plug 'brianhuster/live-preview.nvim', { 'do': 'npm install && npm install -g nodemon' } " if you use yarn, replace npm with yarn

	call plug#end()
<

==============================================================================
4. Setup						*live-preview-setup*

Add the following to your `init.lua`:
>lua
	require('live-preview').setup()
<

For `init.vim`:
>vim
	lua require('live-preview').setup()
<

You can also customize the plugin by passing a table to the `setup` function.

Using Lua:
>lua
	require('live-preview').setup({
	    commands = {
	        start = 'LivePreview', -- Command to start the live preview server and open the default browser. Default is 'LivePreview'
	        stop = 'StopPreview', -- Command to stop the live preview. Default is 'StopPreview'
	    },
	    port = 3000, -- Port to run the live preview server on. Default is 3000
	})
<

Using VimScript:
>vim
	lua require('live-preview').setup({
	    commands = {
	        start = 'LivePreview', -- Command to start the live preview server and open the default browser. Default is 'LivePreview'
	        stop = 'StopPreview', -- Command to stop the live preview. Default is 'StopPreview'
	    },
	    port = 3000, -- Port to run the live preview server on. Default is 3000
	})
<

==============================================================================
5. Usage						*live-preview-usage*

COMMANDS

                                                *:LivePreview*
:LivePreview        Start live-preview server and open browser.

                                                *:StopPreview*
:StopPreview        Stop the live-preview server.


These commands can be changed based on your customization in the `setup`
function in your Neovim configuration file.

==============================================================================
6. License						*live-preview-license*

This project is licensed under the MIT License. For more details, see the
LICENSE file in the project repository.

==============================================================================
